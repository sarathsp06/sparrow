// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/webhook.proto

package webhook

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WebhookJobStatus represents the status of a webhook job
type WebhookJobStatus int32

const (
	WebhookJobStatus_UNKNOWN   WebhookJobStatus = 0
	WebhookJobStatus_PENDING   WebhookJobStatus = 1
	WebhookJobStatus_RUNNING   WebhookJobStatus = 2
	WebhookJobStatus_COMPLETED WebhookJobStatus = 3
	WebhookJobStatus_FAILED    WebhookJobStatus = 4
	WebhookJobStatus_CANCELLED WebhookJobStatus = 5
	WebhookJobStatus_RETRYING  WebhookJobStatus = 6
)

// Enum value maps for WebhookJobStatus.
var (
	WebhookJobStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETED",
		4: "FAILED",
		5: "CANCELLED",
		6: "RETRYING",
	}
	WebhookJobStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"PENDING":   1,
		"RUNNING":   2,
		"COMPLETED": 3,
		"FAILED":    4,
		"CANCELLED": 5,
		"RETRYING":  6,
	}
)

func (x WebhookJobStatus) Enum() *WebhookJobStatus {
	p := new(WebhookJobStatus)
	*p = x
	return p
}

func (x WebhookJobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebhookJobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_webhook_proto_enumTypes[0].Descriptor()
}

func (WebhookJobStatus) Type() protoreflect.EnumType {
	return &file_proto_webhook_proto_enumTypes[0]
}

func (x WebhookJobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebhookJobStatus.Descriptor instead.
func (WebhookJobStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{0}
}

// ScheduleWebhookRequest represents a request to schedule a webhook
type ScheduleWebhookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                                                                   // Target URL for the webhook
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`                                                                             // HTTP method (POST, PUT, GET, etc.)
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // HTTP headers
	Payload       string                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`                                                                           // JSON payload as string
	Timeout       int32                  `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                          // Timeout in seconds
	Queue         string                 `protobuf:"bytes,6,opt,name=queue,proto3" json:"queue,omitempty"`                                                                               // Queue name (optional)
	ScheduledAt   int64                  `protobuf:"varint,7,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`                                               // Unix timestamp for scheduling (optional)
	Priority      int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`                                                                        // Job priority (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleWebhookRequest) Reset() {
	*x = ScheduleWebhookRequest{}
	mi := &file_proto_webhook_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWebhookRequest) ProtoMessage() {}

func (x *ScheduleWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_webhook_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWebhookRequest.ProtoReflect.Descriptor instead.
func (*ScheduleWebhookRequest) Descriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleWebhookRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ScheduleWebhookRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ScheduleWebhookRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ScheduleWebhookRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *ScheduleWebhookRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ScheduleWebhookRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *ScheduleWebhookRequest) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

func (x *ScheduleWebhookRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// ScheduleWebhookResponse represents the response for scheduling a webhook
type ScheduleWebhookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                   // Unique job identifier
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                            // Whether the scheduling was successful
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                             // Success or error message
	ScheduledAt   int64                  `protobuf:"varint,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // When the job was scheduled for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleWebhookResponse) Reset() {
	*x = ScheduleWebhookResponse{}
	mi := &file_proto_webhook_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWebhookResponse) ProtoMessage() {}

func (x *ScheduleWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_webhook_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWebhookResponse.ProtoReflect.Descriptor instead.
func (*ScheduleWebhookResponse) Descriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleWebhookResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *ScheduleWebhookResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScheduleWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScheduleWebhookResponse) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

// ScheduleWebhookBatchRequest represents a request to schedule multiple webhooks
type ScheduleWebhookBatchRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Webhooks      []*ScheduleWebhookRequest `protobuf:"bytes,1,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleWebhookBatchRequest) Reset() {
	*x = ScheduleWebhookBatchRequest{}
	mi := &file_proto_webhook_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWebhookBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWebhookBatchRequest) ProtoMessage() {}

func (x *ScheduleWebhookBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_webhook_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWebhookBatchRequest.ProtoReflect.Descriptor instead.
func (*ScheduleWebhookBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleWebhookBatchRequest) GetWebhooks() []*ScheduleWebhookRequest {
	if x != nil {
		return x.Webhooks
	}
	return nil
}

// ScheduleWebhookBatchResponse represents the response for batch webhook scheduling
type ScheduleWebhookBatchResponse struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	Results        []*ScheduleWebhookResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalScheduled int32                      `protobuf:"varint,2,opt,name=total_scheduled,json=totalScheduled,proto3" json:"total_scheduled,omitempty"`
	TotalFailed    int32                      `protobuf:"varint,3,opt,name=total_failed,json=totalFailed,proto3" json:"total_failed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScheduleWebhookBatchResponse) Reset() {
	*x = ScheduleWebhookBatchResponse{}
	mi := &file_proto_webhook_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWebhookBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWebhookBatchResponse) ProtoMessage() {}

func (x *ScheduleWebhookBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_webhook_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWebhookBatchResponse.ProtoReflect.Descriptor instead.
func (*ScheduleWebhookBatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{3}
}

func (x *ScheduleWebhookBatchResponse) GetResults() []*ScheduleWebhookResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ScheduleWebhookBatchResponse) GetTotalScheduled() int32 {
	if x != nil {
		return x.TotalScheduled
	}
	return 0
}

func (x *ScheduleWebhookBatchResponse) GetTotalFailed() int32 {
	if x != nil {
		return x.TotalFailed
	}
	return 0
}

// GetWebhookStatusRequest represents a request to get webhook job status
type GetWebhookStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWebhookStatusRequest) Reset() {
	*x = GetWebhookStatusRequest{}
	mi := &file_proto_webhook_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWebhookStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebhookStatusRequest) ProtoMessage() {}

func (x *GetWebhookStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_webhook_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebhookStatusRequest.ProtoReflect.Descriptor instead.
func (*GetWebhookStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{4}
}

func (x *GetWebhookStatusRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

// GetWebhookStatusResponse represents the response for webhook status
type GetWebhookStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status        WebhookJobStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=webhook.WebhookJobStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ScheduledAt   int64                  `protobuf:"varint,5,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	AttemptedAt   int64                  `protobuf:"varint,6,opt,name=attempted_at,json=attemptedAt,proto3" json:"attempted_at,omitempty"`
	AttemptCount  int32                  `protobuf:"varint,7,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	MaxAttempts   int32                  `protobuf:"varint,8,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWebhookStatusResponse) Reset() {
	*x = GetWebhookStatusResponse{}
	mi := &file_proto_webhook_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWebhookStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebhookStatusResponse) ProtoMessage() {}

func (x *GetWebhookStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_webhook_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebhookStatusResponse.ProtoReflect.Descriptor instead.
func (*GetWebhookStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_webhook_proto_rawDescGZIP(), []int{5}
}

func (x *GetWebhookStatusResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *GetWebhookStatusResponse) GetStatus() WebhookJobStatus {
	if x != nil {
		return x.Status
	}
	return WebhookJobStatus_UNKNOWN
}

func (x *GetWebhookStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWebhookStatusResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetWebhookStatusResponse) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

func (x *GetWebhookStatusResponse) GetAttemptedAt() int64 {
	if x != nil {
		return x.AttemptedAt
	}
	return 0
}

func (x *GetWebhookStatusResponse) GetAttemptCount() int32 {
	if x != nil {
		return x.AttemptCount
	}
	return 0
}

func (x *GetWebhookStatusResponse) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

var File_proto_webhook_proto protoreflect.FileDescriptor

const file_proto_webhook_proto_rawDesc = "" +
	"\n" +
	"\x13proto/webhook.proto\x12\awebhook\"\xcf\x02\n" +
	"\x16ScheduleWebhookRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12F\n" +
	"\aheaders\x18\x03 \x03(\v2,.webhook.ScheduleWebhookRequest.HeadersEntryR\aheaders\x12\x18\n" +
	"\apayload\x18\x04 \x01(\tR\apayload\x12\x18\n" +
	"\atimeout\x18\x05 \x01(\x05R\atimeout\x12\x14\n" +
	"\x05queue\x18\x06 \x01(\tR\x05queue\x12!\n" +
	"\fscheduled_at\x18\a \x01(\x03R\vscheduledAt\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\x17ScheduleWebhookResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x03R\x05jobId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12!\n" +
	"\fscheduled_at\x18\x04 \x01(\x03R\vscheduledAt\"Z\n" +
	"\x1bScheduleWebhookBatchRequest\x12;\n" +
	"\bwebhooks\x18\x01 \x03(\v2\x1f.webhook.ScheduleWebhookRequestR\bwebhooks\"\xa6\x01\n" +
	"\x1cScheduleWebhookBatchResponse\x12:\n" +
	"\aresults\x18\x01 \x03(\v2 .webhook.ScheduleWebhookResponseR\aresults\x12'\n" +
	"\x0ftotal_scheduled\x18\x02 \x01(\x05R\x0etotalScheduled\x12!\n" +
	"\ftotal_failed\x18\x03 \x01(\x05R\vtotalFailed\"0\n" +
	"\x17GetWebhookStatusRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x03R\x05jobId\"\xab\x02\n" +
	"\x18GetWebhookStatusResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x03R\x05jobId\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.webhook.WebhookJobStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12!\n" +
	"\fscheduled_at\x18\x05 \x01(\x03R\vscheduledAt\x12!\n" +
	"\fattempted_at\x18\x06 \x01(\x03R\vattemptedAt\x12#\n" +
	"\rattempt_count\x18\a \x01(\x05R\fattemptCount\x12!\n" +
	"\fmax_attempts\x18\b \x01(\x05R\vmaxAttempts*q\n" +
	"\x10WebhookJobStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\r\n" +
	"\tCANCELLED\x10\x05\x12\f\n" +
	"\bRETRYING\x10\x062\xa4\x02\n" +
	"\x0eWebhookService\x12T\n" +
	"\x0fScheduleWebhook\x12\x1f.webhook.ScheduleWebhookRequest\x1a .webhook.ScheduleWebhookResponse\x12c\n" +
	"\x14ScheduleWebhookBatch\x12$.webhook.ScheduleWebhookBatchRequest\x1a%.webhook.ScheduleWebhookBatchResponse\x12W\n" +
	"\x10GetWebhookStatus\x12 .webhook.GetWebhookStatusRequest\x1a!.webhook.GetWebhookStatusResponseB/Z-github.com/sarathsp06/httpqueue/proto/webhookb\x06proto3"

var (
	file_proto_webhook_proto_rawDescOnce sync.Once
	file_proto_webhook_proto_rawDescData []byte
)

func file_proto_webhook_proto_rawDescGZIP() []byte {
	file_proto_webhook_proto_rawDescOnce.Do(func() {
		file_proto_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_webhook_proto_rawDesc), len(file_proto_webhook_proto_rawDesc)))
	})
	return file_proto_webhook_proto_rawDescData
}

var file_proto_webhook_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_webhook_proto_goTypes = []any{
	(WebhookJobStatus)(0),                // 0: webhook.WebhookJobStatus
	(*ScheduleWebhookRequest)(nil),       // 1: webhook.ScheduleWebhookRequest
	(*ScheduleWebhookResponse)(nil),      // 2: webhook.ScheduleWebhookResponse
	(*ScheduleWebhookBatchRequest)(nil),  // 3: webhook.ScheduleWebhookBatchRequest
	(*ScheduleWebhookBatchResponse)(nil), // 4: webhook.ScheduleWebhookBatchResponse
	(*GetWebhookStatusRequest)(nil),      // 5: webhook.GetWebhookStatusRequest
	(*GetWebhookStatusResponse)(nil),     // 6: webhook.GetWebhookStatusResponse
	nil,                                  // 7: webhook.ScheduleWebhookRequest.HeadersEntry
}
var file_proto_webhook_proto_depIdxs = []int32{
	7, // 0: webhook.ScheduleWebhookRequest.headers:type_name -> webhook.ScheduleWebhookRequest.HeadersEntry
	1, // 1: webhook.ScheduleWebhookBatchRequest.webhooks:type_name -> webhook.ScheduleWebhookRequest
	2, // 2: webhook.ScheduleWebhookBatchResponse.results:type_name -> webhook.ScheduleWebhookResponse
	0, // 3: webhook.GetWebhookStatusResponse.status:type_name -> webhook.WebhookJobStatus
	1, // 4: webhook.WebhookService.ScheduleWebhook:input_type -> webhook.ScheduleWebhookRequest
	3, // 5: webhook.WebhookService.ScheduleWebhookBatch:input_type -> webhook.ScheduleWebhookBatchRequest
	5, // 6: webhook.WebhookService.GetWebhookStatus:input_type -> webhook.GetWebhookStatusRequest
	2, // 7: webhook.WebhookService.ScheduleWebhook:output_type -> webhook.ScheduleWebhookResponse
	4, // 8: webhook.WebhookService.ScheduleWebhookBatch:output_type -> webhook.ScheduleWebhookBatchResponse
	6, // 9: webhook.WebhookService.GetWebhookStatus:output_type -> webhook.GetWebhookStatusResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_webhook_proto_init() }
func file_proto_webhook_proto_init() {
	if File_proto_webhook_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_webhook_proto_rawDesc), len(file_proto_webhook_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_webhook_proto_goTypes,
		DependencyIndexes: file_proto_webhook_proto_depIdxs,
		EnumInfos:         file_proto_webhook_proto_enumTypes,
		MessageInfos:      file_proto_webhook_proto_msgTypes,
	}.Build()
	File_proto_webhook_proto = out.File
	file_proto_webhook_proto_goTypes = nil
	file_proto_webhook_proto_depIdxs = nil
}
